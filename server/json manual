Отже:
1) додавання таска
{
"operation": "addtask",
  "etalon": " 1 ",
  "name": "test example",
  "lang": "js",
  "task": 1,
  "function": {
    "function_name": "function",
    "type": 1,
"array_type": 1, 
"unit_test_num": 2,
"size": 2,

    "checkable_args_indexes":[
    [
     {
          "first": 0,
          "second": 0
        },
        {
          "first": 0,
          "second": 0
        }
      ],
	[
        {
          "first": 0,
          "second": 0
        }
      ]
    ],
    "results": [[10.0,10.0 ],[10.0,10.0 ]],
    "compare_mark": [2, 2],
"tests_code":[	"", ""],
    "args": 	[
	{
      "type": 1,
      "arg_name": "x",
      "is_array": "0",
      "value": [10.0, 12.0],
       "compare_mark": [2, 2],
"etalon_value": [10.0, 12.0]
    	},
	{
      "type": 3,
      "arg_name": "vasya",
      "is_array": "1",
      "size": "2",
      "value": [["safdasdf", "safdasdf"],["safdasdf", "safdasdf"]],
       "compare_mark": [2, 2],
"etalon_value": [["safdasdf", "safdasdf"],["safdasdf", "safdasdf"]]
    	}
		]
  }
}


operation - обовязкове
etalon - обовязкове, код прєпода. Якшо він є, ну не пустий (містить символи крім абз, пробілів, табуляції), то для юніт тестів юзається цей код. При цьому поля results може вообше не бути.
lang - обов’язкове (c++,cs/c#, php, java, js)

task  - обовязкове

function_name - обов’язкове, назва функції

type   - обовязкове, тип, який вертає функція (INT = 0,FLOAT  = 1,BOOL = 2,STRING = 3)

array_type -  обовязкове (0 - функція вертає змінну, 1 - масив). якшо 1, то має бути поле size

size - має бути, якшо array_type = 1. Розмір масива каждого резалта

unit_test_num - обовязкове, к-чть юніт тестів

results - якшо etalon пустий, то резалтів має бути стількиж, скільки тестів, кожен має бути масив(розміром size)  чи змінна (як вказано в array_type ) 

checkable_args_indexes - обовязкове. Використовується для порівняння змінних в юніт тестах. Наприклад від джсона вище будуть такі змінні:
var result=[]; //для результату виконання функції користувача
var result_etalon=[]; //для результату виконання функції прєпода
var result_for_etalon=[]; // для резалтів каждого юніт теста (із поля results)
var x; // передається в функцію користувача
var x_etalon; // передається в функцію прєпода
var x_for_etalon; // для порівняння значення змінної після прогонки через користувацьку ф-ію із значенням x_etalon
var vasya; //аналогічно
var vasya_etalon; //аналогічно
var vasya_for_etalon; //аналогічно
ці змінні нумеруються від 0, тобто result - 0. result_etalon 1, .. x_etalon - 4 і тд
тобто в даному випадку в перших двох тестах порівняєтьсчя (result == result) (як приклад). 
їх може бути максимум стільки. скільки є тестів

compare_mark -  - обовязкове, має бути стільки. скільки є тестів. Вказує, як порівнюватиметься те, що вернула ф-ія користувача, із тим, що вернула ф-ія прєпода ( чи вказано в резалт):
0  <=,  1  <,  2 == , 3 > , 4 >=

в args:
type - має  бути, тип змінної (аналогічно)
is_array - має  бути (0 змінна, 1 масиив)
etalon_value - не обовязкове, але якшо є, то має бутив кількості unit_test_num, масив розміром../змінна  типу type?   а якшо нема, то порівняння не буде

compare_mark - обовязкове, вказуґ знаки порівняння value із etalon_value




 {
"operation": "start",
"token": "-8668338574358268261",
"session" : "5423",
"jobid" : "43221",
"code" : "
var array = new Array( 10.0, 10.0);
return array;
",
"task": "1",
"lang": "js"
}

{
"operation": "result",
"token": "-8668338574358268261",
"session" : "5423",
"jobid" : "43221",
"task": "1",
"lang": "js"
}
всі обовязкові

