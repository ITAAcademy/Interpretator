-- phpMyAdmin SQL Dump
-- version 4.0.10deb1
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Dec 16, 2015 at 08:26 PM
-- Server version: 5.5.43-0ubuntu0.14.04.1
-- PHP Version: 5.5.9-1ubuntu4.14

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `ITA-codeforce`
--

-- --------------------------------------------------------

--
-- Table structure for table `assignment_cpp`
--

DROP TABLE IF EXISTS `assignment_cpp`;
CREATE TABLE IF NOT EXISTS `assignment_cpp` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `header` text,
  `etalon` text,
  `footer` text,
  `json` text NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=551 ;

--
-- Truncate table before insert `assignment_cpp`
--

TRUNCATE TABLE `assignment_cpp`;
--
-- Dumping data for table `assignment_cpp`
--

INSERT INTO `assignment_cpp` (`ID`, `header`, `etalon`, `footer`, `json`) VALUES
(80, '#include <iostream>\n		#include <cstdlib>\n		#include <algorithm>\n using namespace std;\n		#include <cxxabi.h>\n		#include <cmath>\n		#include <stdio.h>\n		#include <string.h>\n\n float function_etalon( &x, &vasya)\n{\nreturn 0;\n}\n float function_main( &x, &vasya)\n{\n', '', 'return 0;\n}\ntemplate<typename T,int size>\n			bool compareArrs(T arr1[size],T arr2[size])\n				{\n				for (int i=0;i<size;i++)\n				{\n				//if (strcmp(typeid(T).name(), "f") == 0)\n				//{\n					//if (fabs(arr1[i]) - arr2[i] ) > 0.009) \n				//	return false;\n				//}\n 				//else	\n					if (arr1[i] != arr2[i])\n						return false;\n					}\n					return true;\n			}\nint main()\n					{\nfloat  result;\nfloat  result_etalon;\nfloat  result_for_etalon;\nfloat  x;\nfloat  x_etalon;\nfloat  x_for_etalon;\nstring  vasya;\nstring  vasya_etalon;\nstring  vasya_for_etalon;\nbool  isTrue;\nbool  variablesCorrectByEtalon,variablesCorrect;\nresult_etalon = 10.0\n;\nx_for_etalon = x = 10.0\n;\nvasya_for_etalon = vasya = "safdasdf"\n;\nx_etalon = 10.0\n;\nvasya_etalon = "safdasdf"\n;\nvariablesCorrect = (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );\n result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);\n result = function_main(x,vasya);\nisTrue = true;\nvariablesCorrectByEtalon = true;isTrue = true;\nif ((  ((result_etalon * 100 ) - (result * 100 ) ) <= 0 ) && variablesCorrect && isTrue)\nstd::cout << " @0@";\nelse\nstd::cout << " @0!@";\nresult_etalon = 11.0\n;\nx_for_etalon = x = 12.0\n;\nvasya_for_etalon = vasya = "safdasdf"\n;\nx_etalon = 12.0\n;\nvasya_etalon = "safdasdf"\n;\nvariablesCorrect = (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );\n result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);\n result = function_main(x,vasya);\nisTrue = true;\nvariablesCorrectByEtalon = true;isTrue = true;\nif ((  ((result_etalon * 100 ) - (result * 100 ) )  < 0 ) && variablesCorrect && isTrue)\nstd::cout << " @1@";\nelse\nstd::cout << " @1!@";\n\nreturn 0;\n}', '{\n"operation": "addtask",\n  "etalon": "",\n  "name": "test example",\n  "lang": "c++",\n  "task": 80,\n  "function": {\n    "type": 1,\n    "checkable_args_indexes":[0,1],\n    "results": [10.0,11.0 ],\n    "compare_mark": [0, 1],\n"tests_code":[	"isTrue = true;", "isTrue = true;"],\n    "args": 	[\n	{\n      "type": 1,\n      "arg_name": "x",\n      "value": [10.0, 12.0],\n       "compare_mark": [2, 3],\n"etalon_value": [10.0, 12.0]\n    	},\n	{\n      "type": 3,\n      "arg_name": "vasya",\n      "value": ["safdasdf", "safdasdf"],\n       "compare_mark": [4, 0],\n"etalon_value": ["safdasdf","safdasdf"]\n    	}\n		]\n  }\n}');

-- --------------------------------------------------------

--
-- Table structure for table `assignment_cs`
--

DROP TABLE IF EXISTS `assignment_cs`;
CREATE TABLE IF NOT EXISTS `assignment_cs` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `header` text,
  `etalon` text,
  `footer` text,
  `json` text NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;

--
-- Truncate table before insert `assignment_cs`
--

TRUNCATE TABLE `assignment_cs`;
-- --------------------------------------------------------

--
-- Table structure for table `assignment_java`
--

DROP TABLE IF EXISTS `assignment_java`;
CREATE TABLE IF NOT EXISTS `assignment_java` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `header` text,
  `etalon` text,
  `footer` text,
  `json` text NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `ID` (`ID`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=56 ;

--
-- Truncate table before insert `assignment_java`
--

TRUNCATE TABLE `assignment_java`;
-- --------------------------------------------------------

--
-- Table structure for table `assignment_js`
--

DROP TABLE IF EXISTS `assignment_js`;
CREATE TABLE IF NOT EXISTS `assignment_js` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `header` text CHARACTER SET latin1,
  `etalon` text CHARACTER SET latin1,
  `footer` text CHARACTER SET latin1,
  `json` text CHARACTER SET latin1 NOT NULL,
  UNIQUE KEY `ID` (`ID`)
) ENGINE=InnoDB  DEFAULT CHARSET=ascii AUTO_INCREMENT=82 ;

--
-- Truncate table before insert `assignment_js`
--

TRUNCATE TABLE `assignment_js`;
--
-- Dumping data for table `assignment_js`
--

INSERT INTO `assignment_js` (`ID`, `header`, `etalon`, `footer`, `json`) VALUES
(80, '#include <iostream>\n		#include <cstdlib>\n		#include <algorithm>\n using namespace std;\n		#include <cxxabi.h>\n		#include <cmath>\n		#include <stdio.h>\n		#include <string.h>\n\n float function_etalon( &x, &vasya)\n{\nreturn 0;\n}\n float function_main( &x, &vasya)\n{\n', '', 'return 0;\n}\ntemplate<typename T,int size>\n			bool compareArrs(T arr1[size],T arr2[size])\n				{\n				for (int i=0;i<size;i++)\n				{\n				//if (strcmp(typeid(T).name(), "f") == 0)\n				//{\n					//if (fabs(arr1[i]) - arr2[i] ) > 0.009) \n				//	return false;\n				//}\n 				//else	\n					if (arr1[i] != arr2[i])\n						return false;\n					}\n					return true;\n			}\nint main()\n					{\nfloat  result;\nfloat  result_etalon;\nfloat  result_for_etalon;\nfloat  x;\nfloat  x_etalon;\nfloat  x_for_etalon;\nstring  vasya;\nstring  vasya_etalon;\nstring  vasya_for_etalon;\nbool  isTrue;\nbool  variablesCorrectByEtalon,variablesCorrect;\nresult_etalon = 10.0\n;\nx_for_etalon = x = 10.0\n;\nvasya_for_etalon = vasya = "safdasdf"\n;\nx_etalon = 10.0\n;\nvasya_etalon = "safdasdf"\n;\nvariablesCorrect = (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );\n result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);\n result = function_main(x,vasya);\nisTrue = true;\nvariablesCorrectByEtalon = true;isTrue = true;\nif ((  ((result_etalon * 100 ) - (result * 100 ) ) <= 0 ) && variablesCorrect && isTrue)\nstd::cout << " @0@";\nelse\nstd::cout << " @0!@";\nresult_etalon = 11.0\n;\nx_for_etalon = x = 12.0\n;\nvasya_for_etalon = vasya = "safdasdf"\n;\nx_etalon = 12.0\n;\nvasya_etalon = "safdasdf"\n;\nvariablesCorrect = (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );\n result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);\n result = function_main(x,vasya);\nisTrue = true;\nvariablesCorrectByEtalon = true;isTrue = true;\nif ((  ((result_etalon * 100 ) - (result * 100 ) )  < 0 ) && variablesCorrect && isTrue)\nstd::cout << " @1@";\nelse\nstd::cout << " @1!@";\n\nreturn 0;\n}', '{\n"operation": "addtask",\n  "etalon": "",\n  "name": "test example",\n  "lang": "Js",\n  "task": 80,\n  "function": {\n    "type": 1,\n    "checkable_args_indexes":[0,1],\n    "results": [10.0,11.0 ],\n    "compare_mark": [0, 1],\n"tests_code":[	"isTrue = true;", "isTrue = true;"],\n    "args": 	[\n	{\n      "type": 1,\n      "arg_name": "x",\n      "value": [10.0, 12.0],\n       "compare_mark": [2, 3],\n"etalon_value": [10.0, 12.0]\n    	},\n	{\n      "type": 3,\n      "arg_name": "vasya",\n      "value": ["safdasdf", "safdasdf"],\n       "compare_mark": [4, 0],\n"etalon_value": ["safdasdf","safdasdf"]\n    	}\n		]\n  }\n}  request isu'),
(81, '\n\nfunction  function_etalon( x, vasya)\n{\nreturn 0;\n}\nfunction  function_main( x, vasya)\n{\n', '', 'return 0;\n}\nvar result;\nvar result_etalon;\nvar result_for_etalon;\nvar x;\nvar x_etalon;\nvar x_for_etalon;\nvar vasya;\nvar vasya_etalon;\nvar vasya_for_etalon;\nvar isTrue;\nvar variablesCorrectByEtalon,variablesCorrect;\nresult_etalon = 10.0\n;\nx_for_etalon = x = 10.0\n;\nvasya_for_etalon = vasya = "safdasdf"\n;\nx_etalon = 10.0\n;\nvasya_etalon = "safdasdf"\n;\nvariablesCorrect = (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );\n result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);\n result = function_main(x,vasya);\nisTrue = true;\nvariablesCorrectByEtalon = true;isTrue = true;\nif ((  ((result_etalon * 100 ) - (result * 100 ) ) <= 0 ) && variablesCorrect && isTrue)\nconsole.log(" @0@");\nelse\nconsole.log(" @0!@");\nresult_etalon = 11.0\n;\nx_for_etalon = x = 12.0\n;\nvasya_for_etalon = vasya = "safdasdf"\n;\nx_etalon = 12.0\n;\nvasya_etalon = "safdasdf"\n;\nvariablesCorrect = (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );\n result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);\n result = function_main(x,vasya);\nisTrue = true;\nvariablesCorrectByEtalon = true;isTrue = true;\nif ((  ((result_etalon * 100 ) - (result * 100 ) )  < 0 ) && variablesCorrect && isTrue)\nconsole.log(" @1@");\nelse\nconsole.log(" @1!@");\n', '{\n"operation": "addtask",\n  "etalon": "",\n  "name": "test example",\n  "lang": "js",\n  "task": 81,\n  "function": {\n    "type": 1,\n    "checkable_args_indexes":[0,1],\n    "results": [10.0,11.0 ],\n    "compare_mark": [0, 1],\n"tests_code":[	"isTrue = true;", "isTrue = true;"],\n    "args": 	[\n	{\n      "type": 1,\n      "arg_name": "x",\n      "value": [10.0, 12.0],\n       "compare_mark": [2, 3],\n"etalon_value": [10.0, 12.0]\n    	},\n	{\n      "type": 3,\n      "arg_name": "vasya",\n      "value": ["safdasdf", "safdasdf"],\n       "compare_mark": [4, 0],\n"etalon_value": ["safdasdf","safdasdf"]\n    	}\n		]\n  }\n}ñ');

-- --------------------------------------------------------

--
-- Table structure for table `assignment_php`
--

DROP TABLE IF EXISTS `assignment_php`;
CREATE TABLE IF NOT EXISTS `assignment_php` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `header` text CHARACTER SET latin1,
  `etalon` text CHARACTER SET latin1,
  `footer` text CHARACTER SET latin1,
  `json` text CHARACTER SET latin1 NOT NULL,
  UNIQUE KEY `ID` (`ID`)
) ENGINE=InnoDB  DEFAULT CHARSET=ascii AUTO_INCREMENT=91 ;

--
-- Truncate table before insert `assignment_php`
--

TRUNCATE TABLE `assignment_php`;
--
-- Dumping data for table `assignment_php`
--

INSERT INTO `assignment_php` (`ID`, `header`, `etalon`, `footer`, `json`) VALUES
(30, '\n\n<?php \nfunction   function_etalon(  $x,  $vasya)\n{\nreturn 0;\n}\nfunction   function_main(  $x,  $vasya)\n{\n', '', 'return 0;\n}\n  $result;\n  $result_etalon;\n  $result_etalon_for_etalon;\n  $x;\n  $x_etalon;\n  $x_for_etalon;\n  $vasya;\n  $vasya_etalon;\n  $vasya_for_etalon;\n $isTrue;\n  $variablesCorrectByEtalon;$variablesCorrect;\n$result_etalon[0] = "adin"\n;\n$result_etalon[1] = "two"\n;\n$x_for_etalon = $x = 10.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 10.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon =  !array_diff($result,$result) &&  !array_diff($result,$result_etalon);isTrue = true;\nif ( !array_diff($result_etalon,$result) && $variablesCorrect && $isTrue)\necho " @0@";\nelse\necho " @0!@";\n$result_etalon[0] = "adin"\n;\n$result_etalon[1] = "two"\n;\n$x_for_etalon = $x = 12.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 12.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = false && (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 );isTrue = true;\nif ( !array_diff($result_etalon,$result) && $variablesCorrect && $isTrue)\necho " @1@";\nelse\necho " @1!@";\n?>\n', '{\n"operation": "addtask",\n"etalon": "",\n"name": "test example",\n"lang": "php",\n"task": 30,\n"function": {\n"function_name": "function",\n"type": 3,\n"checkable_args_indexes":[ [ {"first":0,"second":0},{"first":0,"second":1} ],[ {"first":2,"second":3},{"first":3,"second":4} ] ],\n"results": [["adin", "two" ],["adin", "two" ] ],\n"compare_mark": [0, 1],\n"tests_code":[ "isTrue = true;", "isTrue = true;"],\n"args": [\n{\n"type": 1,\n"arg_name": "x",\n"value": [10.0, 12.0],\n"compare_mark": [2, 3],\n"etalon_value": [10.0, 12.0]\n},\n{\n"type": 3,\n"arg_name": "vasya",\n"value": ["safdasdf", "safdasdf"],\n"compare_mark": [4, 0],\n"etalon_value": ["safdasdf","safdasdf"]\n}\n]\n}\n}'),
(31, '\n\n<?php \npublic class MainClass {\nfunction   function_etalon(  $x,  $vasya)\n{\nreturn default(  [] );\n}\nfunction   function_main(  $x,  $vasya)\n{\n', '', 'return 0;\n}\n  $result;\n  $result_etalon;\n  $result_etalon_for_etalon;\n  $x;\n  $x_etalon;\n  $x_for_etalon;\n  $vasya;\n  $vasya_etalon;\n  $vasya_for_etalon;\n $isTrue;\n  $variablesCorrectByEtalon;$variablesCorrect;\n$result_etalon[0] = "adin"\n;\n$result_etalon[1] = "two"\n;\n$x_for_etalon = $x = 10.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 10.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon =  !array_diff($result,$result) &&  !array_diff($result,$result_etalon);isTrue = true;\nif ( !array_diff($result_etalon,$result) && $variablesCorrect && $isTrue)\necho " @0@";\nelse\necho " @0!@";\n$result_etalon[0] = "adin"\n;\n$result_etalon[1] = "two"\n;\n$x_for_etalon = $x = 12.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 12.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = false && (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 );isTrue = true;\nif ( !array_diff($result_etalon,$result) && $variablesCorrect && $isTrue)\necho " @1@";\nelse\necho " @1!@";\n?>\n', '{\n"operation": "addtask",\n"etalon": "",\n"name": "test example",\n"lang": "php",\n"task": 31,\n"function": {\n"function_name": "function",\n"type": 3,\n"checkable_args_indexes":[ [ {"first":0,"second":0},{"first":0,"second":1} ],[ {"first":2,"second":3},{"first":3,"second":4} ] ],\n"results": [["adin", "two" ],["adin", "two" ] ],\n"compare_mark": [0, 1],\n"tests_code":[ "isTrue = true;", "isTrue = true;"],\n"args": [\n{\n"type": 1,\n"arg_name": "x",\n"value": [10.0, 12.0],\n"compare_mark": [2, 3],\n"etalon_value": [10.0, 12.0]\n},\n{\n"type": 3,\n"arg_name": "vasya",\n"value": ["safdasdf", "safdasdf"],\n"compare_mark": [4, 0],\n"etalon_value": ["safdasdf","safdasdf"]\n}\n]\n}\n}'),
(32, '\n\n<?php \nfunction   function_etalon( $x, $vasya)\n{\nreturn 0;\n}\nfunction   function_main( $x, $vasya)\n{\n', '', 'return 0;\n}\n  $result;\n  $result_etalon;\n  $result_etalon_for_etalon;\n  $x;\n  $x_etalon;\n  $x_for_etalon;\n  $vasya;\n  $vasya_etalon;\n  $vasya_for_etalon;\n $isTrue;\n  $variablesCorrectByEtalon;$variablesCorrect;\n$result_etalon[0] = "adin"\n;\n$result_etalon[1] = "two"\n;\n$x_for_etalon = $x = 10.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 10.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon =  array_diff($result,$result) &&  array_diff($result,$result_etalon);isTrue = true;\nif ( array_diff($result_etalon,$result) && $variablesCorrect && $isTrue)\necho " @0@";\nelse\necho " @0!@";\n$result_etalon[0] = "adin"\n;\n$result_etalon[1] = "two"\n;\n$x_for_etalon = $x = 12.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 12.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = false && (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 );isTrue = true;\nif ( array_diff($result_etalon,$result) && $variablesCorrect && $isTrue)\necho " @1@";\nelse\necho " @1!@";\n?>\n', '{\n"operation": "addtask",\n"etalon": "",\n"name": "test example",\n"lang": "php",\n"task": 32,\n"function": {\n"function_name": "function",\n"type": 3,\n"checkable_args_indexes":[ [ {"first":0,"second":0},{"first":0,"second":1} ],[ {"first":2,"second":3},{"first":3,"second":4} ] ],\n"results": [["adin", "two" ],["adin", "two" ] ],\n"compare_mark": [0, 1],\n"tests_code":[ "isTrue = true;", "isTrue = true;"],\n"args": [\n{\n"type": 1,\n"arg_name": "x",\n"value": [10.0, 12.0],\n"compare_mark": [2, 3],\n"etalon_value": [10.0, 12.0]\n},\n{\n"type": 3,\n"arg_name": "vasya",\n"value": ["safdasdf", "safdasdf"],\n"compare_mark": [4, 0],\n"etalon_value": ["safdasdf","safdasdf"]\n}\n]\n}\n}'),
(33, '\n\n<?php \nfunction   function_etalon( $x, $vasya)\n{\nreturn 0;\n}\nfunction   function_main( $x, $vasya)\n{\n', '', 'return 0;\n}\n  $result;\n  $result_etalon;\n  $result_etalon_for_etalon;\n  $x;\n  $x_etalon;\n  $x_for_etalon;\n  $vasya;\n  $vasya_etalon;\n  $vasya_for_etalon;\n $isTrue;\n  $variablesCorrectByEtalon;$variablesCorrect;\n$result_etalon[0] = "adin"\n;\n$result_etalon[1] = "two"\n;\n$x_for_etalon = $x = 10.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 10.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon =  compareArrs< ,2 > ( $result, $result ) &&  compareArrs< ,2 > ( $result, $result_etalon );isTrue = true;\nif ( compareArrs< ,2 > ( $result_etalon, result ) && $variablesCorrect && $isTrue)\necho " @0@";\nelse\necho " @0!@";\n$result_etalon[0] = "adin"\n;\n$result_etalon[1] = "two"\n;\n$x_for_etalon = $x = 12.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 12.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = false && (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 );isTrue = true;\nif ( compareArrs< ,2 > ( $result_etalon, result ) && $variablesCorrect && $isTrue)\necho " @1@";\nelse\necho " @1!@";\n?>\n', '{\n"operation": "addtask",\n"etalon": "",\n"name": "test example",\n"lang": "php",\n"task": 33,\n"function": {\n"function_name": "function",\n"type": 3,\n"checkable_args_indexes":[ [ {"first":0,"second":0},{"first":0,"second":1} ],[ {"first":2,"second":3},{"first":3,"second":4} ] ],\n"results": [["adin", "two" ],["adin", "two" ] ],\n"compare_mark": [0, 1],\n"tests_code":[ "isTrue = true;", "isTrue = true;"],\n"args": [\n{\n"type": 1,\n"arg_name": "x",\n"value": [10.0, 12.0],\n"compare_mark": [2, 3],\n"etalon_value": [10.0, 12.0]\n},\n{\n"type": 3,\n"arg_name": "vasya",\n"value": ["safdasdf", "safdasdf"],\n"compare_mark": [4, 0],\n"etalon_value": ["safdasdf","safdasdf"]\n}\n]\n}\n}'),
(34, '\n\n<?php \nfunction   function_etalon( $x, $vasya)\n{\nreturn 0;\n}\nfunction   function_main( $x, $vasya)\n{\n', '', 'return 0;\n}\n  $result;\n  $result_etalon;\n  $result_etalon_for_etalon;\n  $x;\n  $x_etalon;\n  $x_for_etalon;\n  $vasya;\n  $vasya_etalon;\n  $vasya_for_etalon;\n $isTrue;\n  $variablesCorrectByEtalon;$variablesCorrect;\n$result_etalon[0] = "adin"\n;\n$result_etalon[1] = "two"\n;\n$x_for_etalon = $x = 10.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 10.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon =  array_diff($result,$result) &&  array_diff($result,$result_etalon);isTrue = true;\nif ( array_diff($result_etalon,result) && $variablesCorrect && $isTrue)\necho " @0@";\nelse\necho " @0!@";\n$result_etalon[0] = "adin"\n;\n$result_etalon[1] = "two"\n;\n$x_for_etalon = $x = 12.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 12.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = false && (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 );isTrue = true;\nif ( array_diff($result_etalon,result) && $variablesCorrect && $isTrue)\necho " @1@";\nelse\necho " @1!@";\n?>\n', '{\n"operation": "addtask",\n"etalon": "",\n"name": "test example",\n"lang": "php",\n"task": 34,\n"function": {\n"function_name": "function",\n"type": 3,\n"checkable_args_indexes":[ [ {"first":0,"second":0},{"first":0,"second":1} ],[ {"first":2,"second":3},{"first":3,"second":4} ] ],\n"results": [["adin", "two" ],["adin", "two" ] ],\n"compare_mark": [0, 1],\n"tests_code":[ "isTrue = true;", "isTrue = true;"],\n"args": [\n{\n"type": 1,\n"arg_name": "x",\n"value": [10.0, 12.0],\n"compare_mark": [2, 3],\n"etalon_value": [10.0, 12.0]\n},\n{\n"type": 3,\n"arg_name": "vasya",\n"value": ["safdasdf", "safdasdf"],\n"compare_mark": [4, 0],\n"etalon_value": ["safdasdf","safdasdf"]\n}\n]\n}\n}'),
(83, '\n\n<?php \nfunction   function_etalon( $x, $vasya)\n{\nreturn 0;\n}\nfunction   function_main( $x, $vasya)\n{\n', '', 'return 0;\n}\n  $result;\n  $result_etalon;\n  $result_etalon_for_etalon;\n  $x;\n  $x_etalon;\n  $x_for_etalon;\n  $vasya;\n  $vasya_etalon;\n  $vasya_for_etalon;\n $isTrue;\n  $variablesCorrectByEtalon,$variablesCorrect;\n$result_etalon = 10.0\n;\n$x_for_etalon = $x = 10.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 10.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = true;isTrue = true;\nif ((  (($result_etalon * 100 ) - (result * 100 ) ) <= 0 ) && $variablesCorrect && $isTruenconsole.log(" @0@");\nelse\nconsole.log(" @0!@");\n$result_etalon = 11.0\n;\n$x_for_etalon = $x = 12.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 12.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = true;isTrue = true;\nif ((  (($result_etalon * 100 ) - (result * 100 ) )  < 0 ) && $variablesCorrect && $isTruenconsole.log(" @1@");\nelse\nconsole.log(" @1!@");\n?>\n', '{\n"operation": "addtask",\n  "etalon": "",\n  "name": "test example",\n  "lang": "php",\n  "task": 83,\n  "function": {\n    "type": 1,\n    "checkable_args_indexes":[0,1],\n    "results": [10.0,11.0 ],\n    "compare_mark": [0, 1],\n"tests_code":[	"isTrue = true;", "isTrue = true;"],\n    "args": 	[\n	{\n      "type": 1,\n      "arg_name": "x",\n      "value": [10.0, 12.0],\n       "compare_mark": [2, 3],\n"etalon_value": [10.0, 12.0]\n    	},\n	{\n      "type": 3,\n      "arg_name": "vasya",\n      "value": ["safdasdf", "safdasdf"],\n       "compare_mark": [4, 0],\n"etalon_value": ["safdasdf","safdasdf"]\n    	}\n		]\n  }\n}'),
(84, '\n\n<?php \nfunction   function_etalon( $x, $vasya)\n{\nreturn 0;\n}\nfunction   function_main( $x, $vasya)\n{\n', '', 'return 0;\n}\n  $result;\n  $result_etalon;\n  $result_etalon_for_etalon;\n  $x;\n  $x_etalon;\n  $x_for_etalon;\n  $vasya;\n  $vasya_etalon;\n  $vasya_for_etalon;\n $isTrue;\n  $variablesCorrectByEtalon;$variablesCorrect;\n$result_etalon = 10.0\n;\n$x_for_etalon = $x = 10.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 10.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = true;isTrue = true;\nif ((  (($result_etalon * 100 ) - (result * 100 ) ) <= 0 ) && $variablesCorrect && $isTruenconsole.log(" @0@");\nelse\nconsole.log(" @0!@");\n$result_etalon = 11.0\n;\n$x_for_etalon = $x = 12.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 12.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = true;isTrue = true;\nif ((  (($result_etalon * 100 ) - (result * 100 ) )  < 0 ) && $variablesCorrect && $isTruenconsole.log(" @1@");\nelse\nconsole.log(" @1!@");\n?>\n', '{\n"operation": "addtask",\n  "etalon": "",\n  "name": "test example",\n  "lang": "php",\n  "task": 84,\n  "function": {\n    "type": 1,\n    "checkable_args_indexes":[0,1],\n    "results": [10.0,11.0 ],\n    "compare_mark": [0, 1],\n"tests_code":[	"isTrue = true;", "isTrue = true;"],\n    "args": 	[\n	{\n      "type": 1,\n      "arg_name": "x",\n      "value": [10.0, 12.0],\n       "compare_mark": [2, 3],\n"etalon_value": [10.0, 12.0]\n    	},\n	{\n      "type": 3,\n      "arg_name": "vasya",\n      "value": ["safdasdf", "safdasdf"],\n       "compare_mark": [4, 0],\n"etalon_value": ["safdasdf","safdasdf"]\n    	}\n		]\n  }\n}'),
(85, '\n\n<?php \nfunction   function_etalon( $x, $vasya)\n{\nreturn 0;\n}\nfunction   function_main( $x, $vasya)\n{\n', '', 'return 0;\n}\n  $result;\n  $result_etalon;\n  $result_etalon_for_etalon;\n  $x;\n  $x_etalon;\n  $x_for_etalon;\n  $vasya;\n  $vasya_etalon;\n  $vasya_for_etalon;\n $isTrue;\n  $variablesCorrectByEtalon;$variablesCorrect;\n$result_etalon = 10.0\n;\n$x_for_etalon = $x = 10.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 10.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = true;$isTrue = true;\nif ((  (($result_etalon * 100 ) - (result * 100 ) ) <= 0 ) && $variablesCorrect && $isTruenconsole.log(" @0@");\nelse\nconsole.log(" @0!@");\n$result_etalon = 11.0\n;\n$x_for_etalon = $x = 12.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 12.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = true;$isTrue = true;\nif ((  (($result_etalon * 100 ) - (result * 100 ) )  < 0 ) && $variablesCorrect && $isTruenconsole.log(" @1@");\nelse\nconsole.log(" @1!@");\n?>\n', '{\n"operation": "addtask",\n  "etalon": "",\n  "name": "test example",\n  "lang": "php",\n  "task": 85,\n  "function": {\n    "type": 1,\n    "checkable_args_indexes":[0,1],\n    "results": [10.0,11.0 ],\n    "compare_mark": [0, 1],\n"tests_code":[	"$isTrue = true;", "$isTrue = true;"],\n    "args": 	[\n	{\n      "type": 1,\n      "arg_name": "x",\n      "value": [10.0, 12.0],\n       "compare_mark": [2, 3],\n"etalon_value": [10.0, 12.0]\n    	},\n	{\n      "type": 3,\n      "arg_name": "vasya",\n      "value": ["safdasdf", "safdasdf"],\n       "compare_mark": [4, 0],\n"etalon_value": ["safdasdf","safdasdf"]\n    	}\n		]\n  }\n}'),
(86, '\n\n<?php \nfunction   function_etalon( $x, $vasya)\n{\nreturn 0;\n}\nfunction   function_main( $x, $vasya)\n{\n', '', 'return 0;\n}\n  $result;\n  $result_etalon;\n  $result_etalon_for_etalon;\n  $x;\n  $x_etalon;\n  $x_for_etalon;\n  $vasya;\n  $vasya_etalon;\n  $vasya_for_etalon;\n $isTrue;\n  $variablesCorrectByEtalon;$variablesCorrect;\n$result_etalon = 10.0\n;\n$x_for_etalon = $x = 10.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 10.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = true;$isTrue = true;\nif ((  (($result_etalon * 100 ) - ($result * 100 ) ) <= 0 ) && $variablesCorrect && $isTruenconsole.log(" @0@");\nelse\nconsole.log(" @0!@");\n$result_etalon = 11.0\n;\n$x_for_etalon = $x = 12.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 12.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = true;$isTrue = true;\nif ((  (($result_etalon * 100 ) - ($result * 100 ) )  < 0 ) && $variablesCorrect && $isTruenconsole.log(" @1@");\nelse\nconsole.log(" @1!@");\n?>\n', '{\n"operation": "addtask",\n  "etalon": "",\n  "name": "test example",\n  "lang": "php",\n  "task": 86,\n  "function": {\n    "type": 1,\n    "checkable_args_indexes":[0,1],\n    "results": [10.0,11.0 ],\n    "compare_mark": [0, 1],\n"tests_code":[	"$isTrue = true;", "$isTrue = true;"],\n    "args": 	[\n	{\n      "type": 1,\n      "arg_name": "x",\n      "value": [10.0, 12.0],\n       "compare_mark": [2, 3],\n"etalon_value": [10.0, 12.0]\n    	},\n	{\n      "type": 3,\n      "arg_name": "vasya",\n      "value": ["safdasdf", "safdasdf"],\n       "compare_mark": [4, 0],\n"etalon_value": ["safdasdf","safdasdf"]\n    	}\n		]\n  }\n}'),
(90, '\n\n<?php \nfunction   function_etalon( $x, $vasya)\n{\nreturn 0;\n}\nfunction   function_main( $x, $vasya)\n{\n', '', 'return 0;\n}\n  $result;\n  $result_etalon;\n  $result_etalon_for_etalon;\n  $x;\n  $x_etalon;\n  $x_for_etalon;\n  $vasya;\n  $vasya_etalon;\n  $vasya_for_etalon;\n $isTrue;\n  $variablesCorrectByEtalon;$variablesCorrect;\n$result_etalon = 10.0\n;\n$x_for_etalon = $x = 10.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 10.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = true;$isTrue = true;\nif ((  (($result_etalon * 100 ) - ($result  * 100 ) ) <= 0 ) && $variablesCorrect && $isTrue)\necho " @0@";\nelse\necho " @0!@";\n$result_etalon = 11.0\n;\n$x_for_etalon = $x = 12.0\n;\n$vasya_for_etalon = $vasya = "safdasdf"\n;\n$x_etalon = 12.0\n;\n$vasya_etalon = "safdasdf"\n;\n$variablesCorrect = (  (($x * 100 ) - ($x_etalon * 100 ) )  == 0 ) && ( $vasya == $vasya_etalon );\n$result_for_etalon = function_etalon($x_for_etalon,$vasya_for_etalon);\n$result = function_main($x,$vasya);\n$isTrue = true;\n$variablesCorrectByEtalon = true;$isTrue = true;\nif ((  (($result_etalon * 100 ) - ($result  * 100 ) )  < 0 ) && $variablesCorrect && $isTrue)\necho " @1@";\nelse\necho " @1!@";\n?>\n', '{\n"operation": "addtask",\n  "etalon": "",\n  "name": "test example",\n  "lang": "php",\n  "task": 90,\n  "function": {\n    "type": 1,\n    "checkable_args_indexes":[0,1],\n    "results": [10.0,11.0 ],\n    "compare_mark": [0, 1],\n"tests_code":[	"$isTrue = true;", "$isTrue = true;"],\n    "args": 	[\n	{\n      "type": 1,\n      "arg_name": "x",\n      "value": [10.0, 12.0],\n       "compare_mark": [2, 3],\n"etalon_value": [10.0, 12.0]\n    	},\n	{\n      "type": 3,\n      "arg_name": "vasya",\n      "value": ["safdasdf", "safdasdf"],\n       "compare_mark": [4, 0],\n"etalon_value": ["safdasdf","safdasdf"]\n    	}\n		]\n  }\n}');

-- --------------------------------------------------------

--
-- Table structure for table `history`
--

DROP TABLE IF EXISTS `history`;
CREATE TABLE IF NOT EXISTS `history` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `ip` varchar(20) DEFAULT NULL,
  `code` varchar(512) DEFAULT NULL,
  `date_time` datetime DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=499 ;

--
-- Truncate table before insert `history`
--

TRUNCATE TABLE `history`;
-- --------------------------------------------------------

--
-- Table structure for table `results`
--

DROP TABLE IF EXISTS `results`;
CREATE TABLE IF NOT EXISTS `results` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `session` varchar(255) CHARACTER SET ascii NOT NULL,
  `jobid` int(11) NOT NULL,
  `status` text NOT NULL,
  `date` date NOT NULL,
  `result` text NOT NULL,
  `warning` text NOT NULL,
  PRIMARY KEY (`id`,`session`(100)),
  UNIQUE KEY `SECONDY` (`session`,`jobid`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=16 ;

--
-- Truncate table before insert `results`
--

TRUNCATE TABLE `results`;
--
-- Dumping data for table `results`
--

INSERT INTO `results` (`id`, `session`, `jobid`, `status`, `date`, `result`, `warning`) VALUES
(1, '127.0.0.1', 0, '2015-12-9 14:23:2', '0000-00-00', '', ''),
(2, '21', 11114, 'done', '2015-12-09', 'Segmentation fault\n', './src/code2.cpp:37:34: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                 ^\n./src/code2.cpp:37:45: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                            ^\n./src/code2.cpp:41:32: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                               ^\n./src/code2.cpp:41:43: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                                          ^\n4 warnings generated.\n'),
(3, '210', 11114, 'done', '2015-12-09', 'Segmentation fault\n', './src/code0.cpp:37:34: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                 ^\n./src/code0.cpp:37:45: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                            ^\n./src/code0.cpp:41:32: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                               ^\n./src/code0.cpp:41:43: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                                          ^\n4 warnings generated.\n'),
(4, '21g0', 11114, 'done', '2015-12-09', 'Segmentation fault\n', './src/code2.cpp:37:34: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                 ^\n./src/code2.cpp:37:45: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                            ^\n./src/code2.cpp:41:32: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                               ^\n./src/code2.cpp:41:43: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                                          ^\n4 warnings generated.\n'),
(5, '21g00', 11114, 'done', '2015-12-09', ' @0@ @1@', './src/code1.cpp:37:34: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                 ^\n./src/code1.cpp:37:45: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                            ^\n./src/code1.cpp:41:32: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                               ^\n./src/code1.cpp:41:43: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                                          ^\n4 warnings generated.\n'),
(6, '21qg00', 11114, 'done', '2015-12-09', ' @0@ @1!@', './src/code0.cpp:37:34: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                 ^\n./src/code0.cpp:37:45: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                            ^\n./src/code0.cpp:41:32: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                               ^\n./src/code0.cpp:41:43: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                                          ^\n4 warnings generated.\n'),
(7, '21q0g00', 11114, 'failed', '2015-12-09', '', 'Main3.java:1: error: illegal character: 35\n#include <iostream>\n^\nMain3.java:1: error: class, interface, or enum expected\n#include <iostream>\n         ^\nMain3.java:2: error: illegal character: 35\n		#include <cstdlib>\n		^\nMain3.java:3: error: illegal character: 35\n		#include <algorithm>\n		^\nMain3.java:5: error: illegal character: 35\n		#include <cxxabi.h>\n		^\nMain3.java:5: error: class, interface, or enum expected\n		#include <cxxabi.h>\n		         ^\nMain3.java:6: error: illegal character: 35\n		#include <cmath>\n		^\nMain3.java:7: error: illegal character: 35\n		#include <stdio.h>\n		^\nMain3.java:8: error: illegal character: 35\n		#include <string.h>\n		^\nMain3.java:13: error: class, interface, or enum expected\n}\n^\nMain3.java:19: error: class, interface, or enum expected\nss[0] = "adin";\n^\nMain3.java:20: error: class, interface, or enum expected\nss[1] = "two";\n^\nMain3.java:21: error: class, interface, or enum expected\nreturn ss;\n^\nMain3.java:24: error: class, interface, or enum expected\nreturn 0;\n^\nMain3.java:25: error: class, interface, or enum expected\n}\n^\nMain3.java:29: error: class, interface, or enum expected\n		for (int i=0;i<size;i++)\n		             ^\nMain3.java:29: error: class, interface, or enum expected\n		for (int i=0;i<size;i++)\n		                    ^\nMain3.java:39: error: class, interface, or enum expected\n			}\n			^\nMain3.java:41: error: class, interface, or enum expected\n	}\n	^\nMain3.java:45: error: class, interface, or enum expected\nstring * result;\n^\nMain3.java:46: error: class, interface, or enum expected\nstring * result_for_etalon;\n^\nMain3.java:47: error: class, interface, or enum expected\nfloat  x;\n^\nMain3.java:48: error: class, interface, or enum expected\nfloat  x_etalon;\n^\nMain3.java:49: error: class, interface, or enum expected\nfloat  x_for_etalon;\n^\nMain3.java:50: error: class, interface, or enum expected\nstring  vasya;\n^\nMain3.java:51: error: class, interface, or enum expected\nstring  vasya_etalon;\n^\nMain3.java:52: error: class, interface, or enum expected\nstring  vasya_for_etalon;\n^\nMain3.java:53: error: class, interface, or enum expected\nbool isTrue;\n^\nMain3.java:54: error: class, interface, or enum expected\nbool variablesCorrectByEtalon,variablesCorrect;\n^\nMain3.java:55: error: class, interface, or enum expected\nresult_etalon[0] = "adin"\n^\nMain3.java:57: error: class, interface, or enum expected\nresult_etalon[1] = "two"\n^\nMain3.java:59: error: class, interface, or enum expected\nx_for_etalon = x = 10.0\n^\nMain3.java:61: error: class, interface, or enum expected\nvasya_for_etalon = vasya = "safdasdf"\n^\nMain3.java:63: error: class, interface, or enum expected\nx_etalon = 10.0\n^\nMain3.java:65: error: class, interface, or enum expected\nvasya_etalon = "safdasdf"\n^\nMain3.java:67: error: class, interface, or enum expected\nvariablesCorrect = (  ( floor(x * 100 ) - floor(x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );\n^\nMain3.java:68: error: class, interface, or enum expected\n result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);\n ^\nMain3.java:69: error: class, interface, or enum expected\n result = function_main(x,vasya);\n ^\nMain3.java:70: error: class, interface, or enum expected\nisTrue = true;\n^\nMain3.java:71: error: class, interface, or enum expected\nvariablesCorrectByEtalon = (  ( floor(x * 100 ) - floor(x_for_etalon * 100 ) )  == 0 ) && ( vasya == vasya_for_etalon );isTrue = true;\n^\nMain3.java:71: error: class, interface, or enum expected\nvariablesCorrectByEtalon = (  ( floor(x * 100 ) - floor(x_for_etalon * 100 ) )  == 0 ) && ( vasya == vasya_for_etalon );isTrue = true;\n                                                                                                                        ^\nMain3.java:72: error: class, interface, or enum expected\nif ( compareArrs<string,2 > ( result_etalon, result ) && variablesCorrect && isTrue)\n^\nMain3.java:74: error: class, interface, or enum expected\nelse\n^\nMain3.java:76: error: class, interface, or enum expected\nresult_etalon[0] = "adin"\n^\nMain3.java:78: error: class, interface, or enum expected\nresult_etalon[1] = "twoa"\n^\nMain3.java:80: error: class, interface, or enum expected\nx_for_etalon = x = 12.0\n^\nMain3.java:82: error: class, interface, or enum expected\nvasya_for_etalon = vasya = "safdasdf"\n^\nMain3.java:84: error: class, interface, or enum expected\nx_etalon = 12.0\n^\nMain3.java:86: error: class, interface, or enum expected\nvasya_etalon = "safdasdf"\n^\nMain3.java:88: error: class, interface, or enum expected\nvariablesCorrect = (  ( floor(x * 100 ) - floor(x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );\n^\nMain3.java:89: error: class, interface, or enum expected\n result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);\n ^\nMain3.java:90: error: class, interface, or enum expected\n result = function_main(x,vasya);\n ^\nMain3.java:91: error: class, interface, or enum expected\nisTrue = true;\n^\nMain3.java:92: error: class, interface, or enum expected\nvariablesCorrectByEtalon = (  ( floor(x * 100 ) - floor(x_for_etalon * 100 ) )  == 0 ) && ( vasya == vasya_for_etalon );isTrue = true;\n^\nMain3.java:92: error: class, interface, or enum expected\nvariablesCorrectByEtalon = (  ( floor(x * 100 ) - floor(x_for_etalon * 100 ) )  == 0 ) && ( vasya == vasya_for_etalon );isTrue = true;\n                                                                                                                        ^\nMain3.java:93: error: class, interface, or enum expected\nif ( compareArrs<string,2 > ( result_etalon, result ) && variablesCorrect && isTrue)\n^\nMain3.java:95: error: class, interface, or enum expected\nelse\n^\nMain3.java:98: error: class, interface, or enum expected\nreturn 0;\n^\nMain3.java:99: error: class, interface, or enum expected\n}\n^\n59 errors\n'),
(8, '1241q223f4f2341', 11212, 'done', '2015-12-09', 'Hello World!\nSegmentation fault\n', './src/code3.cpp:37:34: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                 ^\n./src/code3.cpp:37:45: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                            ^\n./src/code3.cpp:41:32: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                               ^\n./src/code3.cpp:41:43: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                                          ^\n4 warnings generated.\n'),
(9, '221', 11114, 'done', '2015-12-09', 'Segmentation fault\n', './src/code2.cpp:37:34: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                 ^\n./src/code2.cpp:37:45: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                            ^\n./src/code2.cpp:41:32: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                               ^\n./src/code2.cpp:41:43: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                                          ^\n4 warnings generated.\n'),
(10, '2211', 11114, 'done', '2015-12-09', ' @0!@ @1@', './src/code1.cpp:37:34: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                 ^\n./src/code1.cpp:37:45: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                            ^\n./src/code1.cpp:41:32: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                               ^\n./src/code1.cpp:41:43: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                                          ^\n4 warnings generated.\n'),
(11, '22111', 11114, 'done', '2015-12-09', ' @0@ @1@', './src/code0.cpp:37:34: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                 ^\n./src/code0.cpp:37:45: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                            ^\n./src/code0.cpp:41:32: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                               ^\n./src/code0.cpp:41:43: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                                          ^\n4 warnings generated.\n'),
(12, '245', 11114, 'failed', '2015-12-10', '', './src/code1.cpp:37:36: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_etalon(float *  &x,string *  &vasya)\n                                   ^\n./src/code1.cpp:37:49: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_etalon(float *  &x,string *  &vasya)\n                                                ^\n./src/code1.cpp:41:34: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_main(float *  &x,string *  &vasya)\n                                 ^\n./src/code1.cpp:41:47: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_main(float *  &x,string *  &vasya)\n                                              ^\n./src/code1.cpp:94:22: error: no matching function for call to ''function_etalon''\n result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);\n                     ^~~~~~~~~~~~~~~\n./src/code1.cpp:37:10: note: candidate function not viable: no known conversion from ''float'' to ''float *&'' for 1st argument\nstring * function_etalon(float *  &x,string *  &vasya)\n         ^\n./src/code1.cpp:95:11: error: no matching function for call to ''function_main''\n result = function_main(x,vasya);\n          ^~~~~~~~~~~~~\n./src/code1.cpp:41:10: note: candidate function not viable: no known conversion from ''float'' to ''float *&'' for 1st argument\nstring * function_main(float *  &x,string *  &vasya)\n         ^\n./src/code1.cpp:115:22: error: no matching function for call to ''function_etalon''\n result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);\n                     ^~~~~~~~~~~~~~~\n./src/code1.cpp:37:10: note: candidate function not viable: no known conversion from ''float'' to ''float *&'' for 1st argument\nstring * function_etalon(float *  &x,string *  &vasya)\n         ^\n./src/code1.cpp:116:11: error: no matching function for call to ''function_main''\n result = function_main(x,vasya);\n          ^~~~~~~~~~~~~\n./src/code1.cpp:41:10: note: candidate function not viable: no known conversion from ''float'' to ''float *&'' for 1st argument\nstring * function_main(float *  &x,string *  &vasya)\n         ^\n4 warnings and 4 errors generated.\n'),
(13, '2001', 11114, 'done', '2015-12-10', 'Segmentation fault\n', './src/code0.cpp:37:34: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                 ^\n./src/code0.cpp:37:45: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                            ^\n./src/code0.cpp:41:32: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                               ^\n./src/code0.cpp:41:43: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                                          ^\n4 warnings generated.\n'),
(14, '200h1', 11114, 'done', '2015-12-10', ' @0!@ @1@', './src/code3.cpp:37:34: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                 ^\n./src/code3.cpp:37:45: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_etalon(float  &x,string  &vasya)\n                                            ^\n./src/code3.cpp:41:32: warning: unused parameter ''x'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                               ^\n./src/code3.cpp:41:43: warning: unused parameter ''vasya'' [-Wunused-parameter]\nstring * function_main(float  &x,string  &vasya)\n                                          ^\n4 warnings generated.\n'),
(15, '21', 111114, 'done', '2015-12-10', ' @0!@ @1@', './src/code3.cpp:37:35: warning: unused parameter ''x'' [-Wunused-parameter]\n string * function_etalon(float  &x,string  &vasya)\n                                  ^\n./src/code3.cpp:37:46: warning: unused parameter ''vasya'' [-Wunused-parameter]\n string * function_etalon(float  &x,string  &vasya)\n                                             ^\n./src/code3.cpp:41:33: warning: unused parameter ''x'' [-Wunused-parameter]\n string * function_main(float  &x,string  &vasya)\n                                ^\n./src/code3.cpp:41:44: warning: unused parameter ''vasya'' [-Wunused-parameter]\n string * function_main(float  &x,string  &vasya)\n                                           ^\n4 warnings generated.\n');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
