Mon Dec 14 23:11:33 2015
     



Start server ==== Lib is inited
Mon Dec 14 23:11:33 2015
     Socket is opened 127.0.0.1:8000...  create 8 threads
Mon Dec 14 23:11:33 2015
     void *receiveTask(void *a) 
Mon Dec 14 23:11:33 2015
     Try to accept new request

Mon Dec 14 23:11:33 2015
     void *receiveTask(void *a) 
Mon Dec 14 23:11:33 2015
     Try to accept new request

Mon Dec 14 23:11:33 2015
     void *receiveTask(void *a) 
Mon Dec 14 23:11:33 2015
     Try to accept new request

Mon Dec 14 23:11:33 2015
     void *receiveTask(void *a) 
Mon Dec 14 23:11:33 2015
     Try to accept new request

Mon Dec 14 23:11:33 2015
     void *receiveTask(void *a) 
Mon Dec 14 23:11:33 2015
     Try to accept new request

Mon Dec 14 23:11:33 2015
     void *receiveTask(void *a) 
Mon Dec 14 23:11:33 2015
     Try to accept new request

Mon Dec 14 23:11:33 2015
     void *receiveTask(void *a) 
Mon Dec 14 23:11:33 2015
     Try to accept new request

Mon Dec 14 23:11:33 2015
     void *receiveTask(void *a) 
Mon Dec 14 23:11:33 2015
     Try to accept new request

Mon Dec 14 23:11:41 2015
     request is accepted

Mon Dec 14 23:11:41 2015
     buffer is accepted

Mon Dec 14 23:11:41 2015
     127.0.0.1 request length: 657 
Mon Dec 14 23:11:41 2015
     Connection to host and database successful
Mon Dec 14 23:11:41 2015
     getInstance
Mon Dec 14 23:11:41 2015
     isConnected( )
Mon Dec 14 23:11:41 2015
     Server connected to DB
Mon Dec 14 23:11:41 2015
     Before jsonParser jSON(stream.getRequestBuffer());
Mon Dec 14 23:11:41 2015
     Before parsing successful check
Mon Dec 14 23:11:41 2015
     before parsedFromString==nullValue
Mon Dec 14 23:11:41 2015
     __1
Mon Dec 14 23:11:41 2015
     Before jSON.isJson()
Mon Dec 14 23:11:41 2015
     Before jSON.isValidFields()
Mon Dec 14 23:11:41 2015
     Before parsing
Mon Dec 14 23:11:41 2015
     Parsing successful
Mon Dec 14 23:11:41 2015
     before parsedFromString==nullValue
Mon Dec 14 23:11:41 2015
     __1
Mon Dec 14 23:11:41 2015
     before connectToTable
Mon Dec 14 23:11:41 2015
     getInstance
Mon Dec 14 23:11:41 2015
     Connection  to table assignment_js successfull
Mon Dec 14 23:11:41 2015
     connectedToTable
Mon Dec 14 23:11:41 2015
     task
Mon Dec 14 23:11:41 2015
     4
Mon Dec 14 23:11:41 2015
     etalon
Mon Dec 14 23:11:41 2015
     Yura:: 00001
Mon Dec 14 23:11:41 2015
     return 0;
}
var result=[];
var result_etalon=[];
var result_for_etalon=[];
var x;
var x_etalon;
var x_for_etalon;
var vasya;
var vasya_etalon;
var vasya_for_etalon;
var isTrue;
var variablesCorrectByEtalon,variablesCorrect;
result_etalon[0] = "adin"
;
result_etalon[1] = "two"
;
x_for_etalon = x = 10.0
;
vasya_for_etalon = vasya = "safdasdf"
;
x_etalon = 10.0
;
vasya_etalon = "safdasdf"
;
variablesCorrect = (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );
 result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);
 result = function_main(x,vasya);
isTrue = true;
variablesCorrectByEtalon = result.toString()==result.toString() && result.toString()==result_etalon.toString();isTrue = true;
if (result_etalon.toString()==result.toString() && variablesCorrect && isTrue)
console.log(" @0@");
else
console.log(" @0!@");
result_etalon[0] = "adin"
;
result_etalon[1] = "two"
;
x_for_etalon = x = 12.0
;
vasya_for_etalon = vasya = "safdasdf"
;
x_etalon = 12.0
;
vasya_etalon = "safdasdf"
;
variablesCorrect = (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );
 result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);
 result = function_main(x,vasya);
isTrue = true;
variablesCorrectByEtalon = false && (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 );isTrue = true;
if (result_etalon.toString()==result.toString() && variablesCorrect && isTrue)
console.log(" @1@");
else
console.log(" @1!@");

Mon Dec 14 23:11:41 2015
     qwe33
Mon Dec 14 23:11:41 2015
     temp.insert
Mon Dec 14 23:11:41 2015
     getInstance
Mon Dec 14 23:11:41 2015
     INSERT INTO `assignment_js` (`ID`,`header`,`etalon`,`footer`,`json`) Values ( "4" , "

function  function_etalon( x, vasya)
{
return 0;
}
function  function_main( x, vasya)
{
" , "" , "return 0;
}
var result=[];
var result_etalon=[];
var result_for_etalon=[];
var x;
var x_etalon;
var x_for_etalon;
var vasya;
var vasya_etalon;
var vasya_for_etalon;
var isTrue;
var variablesCorrectByEtalon,variablesCorrect;
result_etalon[0] = \"adin\"
;
result_etalon[1] = \"two\"
;
x_for_etalon = x = 10.0
;
vasya_for_etalon = vasya = \"safdasdf\"
;
x_etalon = 10.0
;
vasya_etalon = \"safdasdf\"
;
variablesCorrect = (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );
 result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);
 result = function_main(x,vasya);
isTrue = true;
variablesCorrectByEtalon = result.toString()==result.toString() && result.toString()==result_etalon.toString();isTrue = true;
if (result_etalon.toString()==result.toString() && variablesCorrect && isTrue)
console.log(\" @0@\");
else
console.log(\" @0!@\");
result_etalon[0] = \"adin\"
;
result_etalon[1] = \"two\"
;
x_for_etalon = x = 12.0
;
vasya_for_etalon = vasya = \"safdasdf\"
;
x_etalon = 12.0
;
vasya_etalon = \"safdasdf\"
;
variablesCorrect = (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );
 result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);
 result = function_main(x,vasya);
isTrue = true;
variablesCorrectByEtalon = false && (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 );isTrue = true;
if (result_etalon.toString()==result.toString() && variablesCorrect && isTrue)
console.log(\" @1@\");
else
console.log(\" @1!@\");
" , "{
\"operation\": \"addtask\",
\"etalon\": \"\",
\"name\": \"test example\",
\"lang\": \"js\",
\"task\": 4,
\"function\": {
\"function_name\": \"function\",
\"type\": 3,
\"checkable_args_indexes\":[ [ {\"first\":0,\"second\":0},{\"first\":0,\"second\":1} ],[ {\"first\":2,\"second\":3},{\"first\":3,\"second\":4} ] ],
\"results\": [[\"adin\", \"two\" ],[\"adin\", \"two\" ] ],
\"compare_mark\": [0, 1],
\"tests_code\":[ \"isTrue = true;\", \"isTrue = true;\"],
\"args\": [
{
\"type\": 1,
\"arg_name\": \"x\",
\"value\": [10.0, 12.0],
\"compare_mark\": [2, 3],
\"etalon_value\": [10.0, 12.0]
},
{
\"type\": 3,
\"arg_name\": \"vasya\",
\"value\": [\"safdasdf\", \"safdasdf\"],
\"compare_mark\": [4, 0],
\"etalon_value\": [\"safdasdf\",\"safdasdf\"]
}
]
}
}" );
Mon Dec 14 23:11:41 2015
     Adding records in to table assignment_js successfull
Mon Dec 14 23:11:41 2015
     Try to accept new request

Mon Dec 14 23:11:50 2015
     request is accepted

Mon Dec 14 23:11:50 2015
     buffer is accepted

Mon Dec 14 23:11:50 2015
     127.0.0.1 request length: 199 
Mon Dec 14 23:11:50 2015
     getInstance
Mon Dec 14 23:11:50 2015
     isConnected( )
Mon Dec 14 23:11:50 2015
     Server connected to DB
Mon Dec 14 23:11:50 2015
     Before jsonParser jSON(stream.getRequestBuffer());
Mon Dec 14 23:11:50 2015
     Before parsing successful check
Mon Dec 14 23:11:50 2015
     before parsedFromString==nullValue
Mon Dec 14 23:11:50 2015
     __1
Mon Dec 14 23:11:50 2015
     Before jSON.isJson()
Mon Dec 14 23:11:50 2015
     Before jSON.isValidFields()
Mon Dec 14 23:11:50 2015
     Before parsing
Mon Dec 14 23:11:50 2015
     Parsing successful
Mon Dec 14 23:11:50 2015
     no threa22
Mon Dec 14 23:11:50 2015
     getInstance
Mon Dec 14 23:11:50 2015
     Connection  to table results successfull
Mon Dec 14 23:11:50 2015
     no threa2
Mon Dec 14 23:11:50 2015
     getInstance
Mon Dec 14 23:11:50 2015
     SELECT * FROM `results` WHERE `session`='2' AND `jobid`='9'
Mon Dec 14 23:11:50 2015
     Getting all records from table results failed or table is empty
Mon Dec 14 23:11:50 2015
     getInstance
Mon Dec 14 23:11:50 2015
     before code empty check
Mon Dec 14 23:11:50 2015
     Before connect to results
Mon Dec 14 23:11:50 2015
     getInstance
Mon Dec 14 23:11:50 2015
     Connection  to table history successfull
Mon Dec 14 23:11:50 2015
     getInstance
Mon Dec 14 23:11:50 2015
     INSERT INTO `history` (`ID`,`ip`,`code`,`date_time`) Values (DEFAULT, "127.0.0.1" , "var a=\"1\";return a;" , "2015-12-14 23:11:50" );
Mon Dec 14 23:11:51 2015
     Adding records in to table history successfull
Mon Dec 14 23:11:51 2015
     Try to accept new request

Mon Dec 14 23:11:51 2015
     Connection  to table results successfull
Mon Dec 14 23:11:51 2015
     getInstance
Mon Dec 14 23:11:51 2015
     INSERT INTO `results` (`id`,`session`,`jobid`,`status`,`date`,`result`,`warning`) Values (DEFAULT, "2" , "9" , "in proccess" , "2015-12-14 23:11:51" , "" , "" );
Mon Dec 14 23:11:51 2015
     Adding records in to table results successfull
Mon Dec 14 23:11:51 2015
     getInstance
Mon Dec 14 23:11:51 2015
     Connection  to table assignment_js successfull
Mon Dec 14 23:11:51 2015
     getInstance
Mon Dec 14 23:11:51 2015
     SELECT * FROM  `assignment_js` where `ID` = 4;
Mon Dec 14 23:11:51 2015
     

function  function_etalon( x, vasya)
{
return 0;
}
function  function_main( x, vasya)
{

 var a="1";return a; 
 return 0;
}
var result=[];
var result_etalon=[];
var result_for_etalon=[];
var x;
var x_etalon;
var x_for_etalon;
var vasya;
var vasya_etalon;
var vasya_for_etalon;
var isTrue;
var variablesCorrectByEtalon,variablesCorrect;
result_etalon[0] = "adin"
;
result_etalon[1] = "two"
;
x_for_etalon = x = 10.0
;
vasya_for_etalon = vasya = "safdasdf"
;
x_etalon = 10.0
;
vasya_etalon = "safdasdf"
;
variablesCorrect = (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );
 result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);
 result = function_main(x,vasya);
isTrue = true;
variablesCorrectByEtalon = result.toString()==result.toString() && result.toString()==result_etalon.toString();isTrue = true;
if (result_etalon.toString()==result.toString() && variablesCorrect && isTrue)
console.log(" @0@");
else
console.log(" @0!@");
result_etalon[0] = "adin"
;
result_etalon[1] = "two"
;
x_for_etalon = x = 12.0
;
vasya_for_etalon = vasya = "safdasdf"
;
x_etalon = 12.0
;
vasya_etalon = "safdasdf"
;
variablesCorrect = (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );
 result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);
 result = function_main(x,vasya);
isTrue = true;
variablesCorrectByEtalon = false && (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 );isTrue = true;
if (result_etalon.toString()==result.toString() && variablesCorrect && isTrue)
console.log(" @1@");
else
console.log(" @1!@");

Mon Dec 14 23:11:51 2015
     failed, not connected to database
Mon Dec 14 23:11:51 2015
     

function  function_etalon( x, vasya)
{
return 0;
}
function  function_main( x, vasya)
{

 var a="1";return a; 
 return 0;
}
var result=[];
var result_etalon=[];
var result_for_etalon=[];
var x;
var x_etalon;
var x_for_etalon;
var vasya;
var vasya_etalon;
var vasya_for_etalon;
var isTrue;
var variablesCorrectByEtalon,variablesCorrect;
result_etalon[0] = "adin"
;
result_etalon[1] = "two"
;
x_for_etalon = x = 10.0
;
vasya_for_etalon = vasya = "safdasdf"
;
x_etalon = 10.0
;
vasya_etalon = "safdasdf"
;
variablesCorrect = (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );
 result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);
 result = function_main(x,vasya);
isTrue = true;
variablesCorrectByEtalon = result.toString()==result.toString() && result.toString()==result_etalon.toString();isTrue = true;
if (result_etalon.toString()==result.toString() && variablesCorrect && isTrue)
console.log(" @0@");
else
console.log(" @0!@");
result_etalon[0] = "adin"
;
result_etalon[1] = "two"
;
x_for_etalon = x = 12.0
;
vasya_for_etalon = vasya = "safdasdf"
;
x_etalon = 12.0
;
vasya_etalon = "safdasdf"
;
variablesCorrect = (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 ) && ( vasya == vasya_etalon );
 result_for_etalon = function_etalon(x_for_etalon,vasya_for_etalon);
 result = function_main(x,vasya);
isTrue = true;
variablesCorrectByEtalon = false && (  ((x * 100 ) - (x_etalon * 100 ) )  == 0 );isTrue = true;
if (result_etalon.toString()==result.toString() && variablesCorrect && isTrue)
console.log(" @1@");
else
console.log(" @1!@");

Mon Dec 14 23:11:51 2015
     3 Start compiler
Mon Dec 14 23:11:51 2015
     1450127511
Mon Dec 14 23:11:51 2015
     build time: 0.440000 @0!@
 @1!@

Mon Dec 14 23:11:51 2015
     cLang colpilation: file not exist
Mon Dec 14 23:11:51 2015
     {
   "date" : "Mon Dec 14 23:11:51 2015\n",
   "result" : " @0!@\n @1!@\n",
   "warnings" : ""
}

Mon Dec 14 23:11:51 2015
     getInstance
Mon Dec 14 23:11:51 2015
     Connection  to table results successfull
Mon Dec 14 23:11:51 2015
     getInstance
Mon Dec 14 23:11:51 2015
     UPDATE `results` SET `session`='2', `jobid`='9', `status`='done', `date`='2015-12-14 23:11:51', `result`=' @0!@
 @1!@
', `warning`='' WHERE `results`.`session`='2' AND `results`.`jobid`='9' 
Mon Dec 14 23:11:51 2015
     Updating records in table results successfull
Mon Dec 14 23:11:51 2015
     3 Stop compiler
Mon Dec 14 23:11:54 2015
     request is accepted

Mon Dec 14 23:11:54 2015
     buffer is accepted

Mon Dec 14 23:11:54 2015
     127.0.0.1 request length: 200 
Mon Dec 14 23:11:54 2015
     getInstance
Mon Dec 14 23:11:54 2015
     isConnected( )
Mon Dec 14 23:11:54 2015
     Server connected to DB
Mon Dec 14 23:11:54 2015
     Before jsonParser jSON(stream.getRequestBuffer());
Mon Dec 14 23:11:54 2015
     Before parsing successful check
Mon Dec 14 23:11:54 2015
     before parsedFromString==nullValue
Mon Dec 14 23:11:54 2015
     __1
Mon Dec 14 23:11:54 2015
     Before jSON.isJson()
Mon Dec 14 23:11:54 2015
     Before jSON.isValidFields()
Mon Dec 14 23:11:54 2015
     Before parsing
Mon Dec 14 23:11:54 2015
     Parsing successful
Mon Dec 14 23:11:54 2015
     getInstance
Mon Dec 14 23:11:54 2015
     Connection  to table results successfull
Mon Dec 14 23:11:54 2015
     getInstance
Mon Dec 14 23:11:54 2015
     SELECT * FROM `results` WHERE `session`='2' AND `jobid`='9'
Mon Dec 14 23:11:54 2015
     Getting all records from table results successfull
Mon Dec 14 23:11:54 2015
     Table 'results' outputed
Mon Dec 14 23:11:54 2015
     Try to accept new request

